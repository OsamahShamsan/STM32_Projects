// -----------------------------
// File: uart_writer.h
// -----------------------------
#ifndef UART_WRITER_H
#define UART_WRITER_H

#include <string.h>
#include "usart.h"
#include <stdbool.h>


#define UART_TX_BUFFER_SIZE 128                // Chunk size per transmission
#define UART_MSG_MAX_LEN     256               // Max length of each message
#define UART_QUEUE_DEPTH      8                // Max number of messages in the queue
#define UART_TX_TIMEOUT_MS 100				   // Time to block the UART transmitting

static char message_queue[UART_QUEUE_DEPTH][UART_MSG_MAX_LEN];
static volatile uint8_t queue_head = 0;
static volatile uint8_t queue_tail = 0;
static volatile uint8_t queue_count = 0;

static uint8_t tx_buffer[UART_TX_BUFFER_SIZE];
static const char* current_str = NULL;
static size_t str_len = 0;
static size_t str_sent = 0;
static volatile bool uart_tx_busy = false;

bool uart_send_blocking(const char* str);
bool uart_send_async(const char* str);
static void uart_start_next_message(void);
bool uart_is_busy(void);

#endif // UART_WRITER_H
