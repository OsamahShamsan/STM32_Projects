#include "menu.h"
#include "vt100.h"
#include <string.h>


static const char* intro_lines[] = {
    "-------------------------",
    "  Welcome to the System!",
    "  Select an option below:",
    "-------------------------"
};

static const char* instructions =
    VT100_BOLD "Use ↑ ↓ to navigate. Press Enter to select.\r\n" VT100_RESET;

static const char* menu_lines[MENU_TOTAL_LINES] = {
    "Option 1 - Sensor Config",
    "Option 2 - Motor Control",
    "Option 3 - System Info",
    "Option 4 - LCD Settings",
    "Option 5 - Exit"
};

static int selected_index = 0;
static MenuEscState esc_state = ESC_STATE_NONE;

#define MENU_TOTAL_LINES 5
#define NUM_INTRO_LINES        (sizeof(intro_lines) / sizeof(intro_lines[0]))
#define NUM_INSTRUCTION_LINES  1
#define MENU_TOP_OFFSET        (NUM_INTRO_LINES + NUM_INSTRUCTION_LINES + 2)  // +1 spacer


// --------------------------------------
// Helper: Send one line with cursor move
// --------------------------------------
static void send_line(const char* text, int is_selected) {
    const char* marker = is_selected ? MENU_MARKER_SELECTED : MENU_MARKER_NORMAL;
    vt100_send(marker);
    vt100_send(text);
    vt100_send_line("");
}

// --------------------------------------
// Redraw only one line
// --------------------------------------
void Menu_UpdateLine(int index, int is_selected) {
    vt100_goto_line(MENU_TOP_OFFSET + index);
    vt100_send(VT100_CLEAR_LINE);  // <- This clears the full terminal line
    send_line(menu_lines[index], is_selected);
}

// --------------------------------------
// Full menu redraw (initial or full refresh)
// --------------------------------------
void Menu_Display(void) {
    vt100_cursor_hide();
    vt100_cursor_home();

    for (size_t i = 0; i < NUM_INTRO_LINES; i++) {
        vt100_send_line(intro_lines[i]);
    }

    vt100_send_line(instructions);

    for (int i = 0; i < MENU_TOTAL_LINES; i++) {
        send_line(menu_lines[i], i == selected_index);
    }

    vt100_cursor_show();
}

// --------------------------------------
// Initial menu setup
// --------------------------------------
void Menu_Init(void) {
    selected_index = 0;
    esc_state = ESC_STATE_NONE;
    vt100_clear_screen();
    vt100_cursor_home();
    Menu_Display();
}

// --------------------------------------
// Handle user selection (ENTER key)
// --------------------------------------
void Menu_ExecuteSelected(int index) {
    vt100_send_line("");
    vt100_send(VT100_GREEN);
    switch (index) {
        case 0: vt100_send_line("Sensor config selected"); break;
        case 1: vt100_send_line("Motor control selected"); break;
        case 2: vt100_send_line("System info selected"); break;
        case 3: vt100_send_line("LCD settings selected"); break;
        case 4: vt100_send_line("Exiting..."); break;
        default: vt100_send_line("Unknown option"); break;
    }
    vt100_send(VT100_RESET);
}

// --------------------------------------
// Key input handler (arrow keys, enter, etc.)
// --------------------------------------
void Menu_HandleInput(uint8_t input) {
    int old_index = selected_index;

    switch (esc_state) {
        case ESC_STATE_NONE:
            if (input == MENU_KEY_ESC) {
                esc_state = ESC_STATE_ESC;
            } else if (input == MENU_KEY_ENTER) {
                Menu_ExecuteSelected(selected_index);
            }
            break;

        case ESC_STATE_ESC:
            if (input == MENU_KEY_BRACKET) {
                esc_state = ESC_STATE_BRACKET;
            } else {
                esc_state = ESC_STATE_NONE;
            }
            break;

        case ESC_STATE_BRACKET:
            if (input == MENU_KEY_ARROW_UP) {
                selected_index = (selected_index == 0) ? (MENU_TOTAL_LINES - 1) : (selected_index - 1);
            } else if (input == MENU_KEY_ARROW_DOWN) {
                selected_index = (selected_index + 1) % MENU_TOTAL_LINES;
            }

            if (old_index != selected_index) {
                Menu_UpdateLine(old_index, false);
                Menu_UpdateLine(selected_index, true);
            }

            esc_state = ESC_STATE_NONE;
            break;

        default:
            esc_state = ESC_STATE_NONE;
            break;
    }
}
