// === uart_dma.c ===
#include "uart_dma.h"
#include "menu.h"
#include "stm32g4xx_hal.h"

extern UART_HandleTypeDef huart2;

static volatile uint8_t dma_busy = 0;

void uart_dma_send(uint8_t* data, uint16_t size) {
    while (dma_busy); // Wait for previous transmission to finish
    dma_busy = 1;
    HAL_UART_Transmit_DMA(&huart2, data, size);
}

void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart) {
    if (huart == &huart2) {
        dma_busy = 0;
    }
}

static uint8_t rx_byte;

void uart_dma_receive_start(void) {
    HAL_UART_Receive_DMA(&huart2, &rx_byte, 1);
}

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
    if (huart == &huart2) {
        Menu_HandleInput(rx_byte);
        uart_dma_receive_start(); // Restart reception
    }
}
}
